include .env

# C++ and Shader Compiler
CPP = g++
SC = glslc

# Windows Configuration. Delete if on MacOS
# CPPFLAGS = -O2 -std=c++20 -I%VULKAN%/include -I$%MINGW%/include -I$(LOCAL_SRC)/include

# MacOS Configuration. Delete if on Windows
# CPPFLAGS = -O2 -std=c++20 `pkg-config --libs vulkan` `pkg-config --static --libs glfw` -I$(LOCAL_SRC)/include

# Files
SRCS = $(wildcard $(LOCAL_SRC)/*.cpp)
BINS = $(patsubst $(LOCAL_SRC)/%.cpp, $(LOCAL_BIN)/%.o, $(SRCS))
LIB = $(LOCAL_LIB)/libpecs.a

VERTS = $(wildcard $(LOCAL_SHDRS)/vert/*.vert)
FRAGS = $(wildcard $(LOCAL_SHDRS)/frag/*.frag)
SPVS = $(patsubst $(LOCAL_SHDRS)/vert/%.vert, $(LOCAL_SHDRS)/%.vert.spv, $(VERTS)) $(patsubst $(LOCAL_SHDRS)/frag/%.frag, $(LOCAL_SHDRS)/%.frag.spv, $(FRAGS))

# Functions
debug: $(LIB)

release: CPPFLAGS += -DNDEBUG
release: $(LIB)

shaders: $(SPVS)

$(LOCAL_LIB)/libpecs.a: $(BINS)
	ar -rcs $@ $(BINS)

$(LOCAL_BIN)/%.o: $(LOCAL_SRC)/%.cpp
	$(CPP) -o $@ $(CPPFLAGS) -c $< $(LD_FLAGS)

$(LOCAL_SHDR)/%.vert.spv: $(LOCAL_SHDR)/vert/%.vert
	$(SC) -o $@ $<

$(LOCAL_SHDR)/%.frag.spv: $(LOCAL_SHDR)/frag/%.frag
	$(SC) -o $@ $<

# Cleaning Functions. Uncomment Accordingly
clean:
#	Windows clean command
#	del /q $(LOCAL_BIN)\* $(LOCAL_SHDR)\*.spv

#	MacOS clean command
#	rm $(LOCAL_BIN)/*  $(LOCAL_SHDR)/*.spv

clean_lib:
# 	Windows clean command
#	del /q $(LOCAL_LIB)\*

#	MacOS clean command
#	rm $(LOCAL_LIB)/*

clean_spvs:
#	Windows clean command
#	del /q $(LOCAL_SHDR)\*.spv

#	MacOS clean command
#	rm $(LOCAL_SHDR)/*.spv
